??wtf
ggplot(dat, aes(dat$position)) + geom_bar()
ggplot(dat, aes(dat$points2)) + geom_histogram(binwidth = 50)
ggplot(dat, aes(salary)) + geom_density()
ggplot(data = filter(dat, team == "GSW"), aes(x = height, y = weight))+
geom_point() + geom_label(aes(label = player))
ggplot(data = gsw, aes(x = height, y = weight)) +
geom_text(aes(label = player)) + geom_point()
gsw
ggplot(data = gsw, aes(x = height, y = weight)) +
geom_point()
x <- 3
x > 5
x <- 3
2t <- 4
sqrt3 <- 2
x2 <- 5
2-4r
1 == TRUE
3 == TRUE
5 == TRUE
x <- c(1, 2, 3, 4, 5, 6, 7)
slice(x, 1:5)
slice(x, 1)
?slice
x <- data.frame()
x <- data.frame(c(1,2,3), c(TRUE, FALSE, FALSE))
x
slice(x, 1:2)
x[1:5]
2 == TRUE
1 & 2
1 == 1
1 == '1'
1 == TRUE
2 == FALSE
'2' == FALSE
'1' == TRUE
0 & 2
?rm
?summarize
?summarise
summarise(dat, max(height))
arrange(
summarise(
group_by(dat, position),
avg_height = mean(height),
avg_weight = mean(weight)),
desc(avg_height)
)
?cbind
x <- c(1, 2, 3)
x <- factor(x)
is.vector(x)
?cbind
?as
factor(x)
as.factor(x)
x
levels(x) <- c(a, b, c)
x
levels(x) <- c("a", "b", c)
levels(x) <- c("a", "b", "c")
y <- c(2, 3, 4)
z <- factor9y
z <- factor(y, levels = c("a", "b", "c"))
z
y
z
z <- factor(y, levels = c("a" = 1, "b" = 2, "c" = 3))
z
?factor
z <- factor(y, levels = "a")
z
y
z <- factor(y)
z
z <- factor(y,levels = c(2 = "a",3 ="b", 4="c"))
z <- factor(y,levels = c("a","b", "c"))
z
z <- factor(y,levels = 2)
z
z <- factor(y,levels = c("2","3","4"))
z
factor(1, 2, 3)
x <- factor(1, 2, 3)
x
?factor
demo()
ggplot(data)
ggplot(data$Experience)
# don't forget to load the packages
library(dplyr)
#library(ggplot2)
# scatterplot (option 2)
ggplot(data = dat) +
geom_point( aes(x = points, y = salary))
getwd()
setwd('/Users/TLuv/stat133/stat133-hws-fall17/hw03')
getwd()
setwd("/Users/TLuv/stat133/stat133-hws-fall17/hw03")
setwd("~/Downloads/stat133")
setwd("~/Downloads/stat133/stat133-hws-fall17-hw03")
setwd("~/Downloads/stat133/stat133-hws-fall17/hw03")
setwd('/Users/TLuv/stat133/stat133-hws-fall17/hw03')
getwd()
library(readr)
# ===================================================================
# Title: make teams table
# Description: More about dplyr and ggplot
# Input(s): nba2017-roster.csv
#           nba2017-stats.csv
# Output(s): efficiency-summary.txt
#            teams-summary.txt
#            nba2017-teams.csv
#            teams_star_plot.pdf
#            experience_salary.pdf
#            teams_star_plot.pdf
#            experience_salary.pdf
# Author: Tianqi Lu
# Date: 10-06-2017
# ===================================================================
# read csv tables
library(readr)
roster <- read_csv('data/nba2017-roster.csv')
stats <- read_csv('data/nba2017-stats.csv')
# add these variables to stats
library(dplyr)
stats <- mutate(stats,
missed_fg = field_goals_atts - field_goals_made,
missed_ft = points1_atts - points1_made,
points = 3 * points3_made + 2 * points2_made + points1_made,
rebounds = off_rebounds + def_rebounds,
efficiency = (points + rebounds + assists + steals + blocks
- missed_fg - missed_ft - turnovers)
/ games_played)
# output the efficiency index
sink(file = 'output/efficiency-summary.txt')
summary(stats$efficiency)
sink()
# merge two data frames
dat <- merge(roster, stats)
# create a new data frame from dat
teams <- summarise(
group_by(dat, team),
experience = sum(experience),
salary = round(sum(salary) / 1000000, digits = 2),
points3 = sum(points3_made),
points2 = sum(points2_made),
free_throws = sum(points1_made),
points = points3 + points2 + free_throws,
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists),
steals = sum(steals),
blocks = sum(blocks),
turnovers = sum(turnovers),
fouls = sum(fouls),
efficiency = sum(efficiency)
)
# export the summary of teams
sink('data/teams-summary.txt')
summary(teams)
sink()
# export teams as a csv file
write.csv(teams, 'data/nba2017-teams.csv')
# export the star plot of teams
pdf(file = 'images/teams_star_plot.pdf')
stars(teams[ ,-1], labels = teams$team)
dev.off()
# export the scatterplot of experience and salary
library(ggplot2)
pdf(file = 'images/experience_salary.pdf')
ggplot(teams, aes(experience, salary, label = team)) +
geom_point() +
geom_text(check_overlap = TRUE)
dev.off()
library(readr)
roster <- read_csv('data/nba2017-roster.csv')
getwd()
# ===================================================================
# Title: make teams table
# Description: More about dplyr and ggplot
# Input(s): nba2017-roster.csv
#           nba2017-stats.csv
# Output(s): efficiency-summary.txt
#            teams-summary.txt
#            nba2017-teams.csv
#            teams_star_plot.pdf
#            experience_salary.pdf
#            teams_star_plot.pdf
#            experience_salary.pdf
# Author: Tianqi Lu
# Date: 10-06-2017
# ===================================================================
# read csv tables
library(readr)
roster <- read_csv('data/nba2017-roster.csv')
stats <- read_csv('data/nba2017-stats.csv')
# add these variables to stats
library(dplyr)
stats <- mutate(stats,
missed_fg = field_goals_atts - field_goals_made,
missed_ft = points1_atts - points1_made,
points = 3 * points3_made + 2 * points2_made + points1_made,
rebounds = off_rebounds + def_rebounds,
efficiency = (points + rebounds + assists + steals + blocks
- missed_fg - missed_ft - turnovers)
/ games_played)
# output the efficiency index
sink(file = 'output/efficiency-summary.txt')
summary(stats$efficiency)
sink()
# merge two data frames
dat <- merge(roster, stats)
# create a new data frame from dat
teams <- summarise(
group_by(dat, team),
experience = sum(experience),
salary = round(sum(salary) / 1000000, digits = 2),
points3 = sum(points3_made),
points2 = sum(points2_made),
free_throws = sum(points1_made),
points = points3 + points2 + free_throws,
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists),
steals = sum(steals),
blocks = sum(blocks),
turnovers = sum(turnovers),
fouls = sum(fouls),
efficiency = sum(efficiency)
)
# export the summary of teams
sink('data/teams-summary.txt')
summary(teams)
sink()
# export teams as a csv file
write.csv(teams, 'data/nba2017-teams.csv')
# export the star plot of teams
pdf(file = 'images/teams_star_plot.pdf')
stars(teams[ ,-1], labels = teams$team)
dev.off()
# export the scatterplot of experience and salary
library(ggplot2)
pdf(file = 'images/experience_salary.pdf')
ggplot(teams, aes(experience, salary, label = team)) +
geom_point() +
geom_text(check_overlap = TRUE)
dev.off()
library(scales)
library(ggplot2)
library(readr)
library(dplyr)
teams <- read_csv('../data/nba2017-teams.csv')
getwd()
library(scales)
library(ggplot2)
library(readr)
library(dplyr)
teams <- read_csv('/data/nba2017-teams.csv')
library(scales)
library(ggplot2)
library(readr)
library(dplyr)
teams <- read_csv('data/nba2017-teams.csv')
ggplot(teams, aes(x = reorder(team, salary), y=salary)) +
geom_bar(stat='identity', fill = 'grey') +
geom_abline(intercept = mean(teams$salary), slope = 0,
color = alpha('coral1', 0.7), size = 2)+
coord_flip()+
labs(y = 'Salary (in millions)', x = 'Team',
title = 'NBA Teams ranked by Total Salary')+
theme_minimal()
select(arrange(teams, desc(salary)), team)
library(scales)
ggplot(teams, aes(x = reorder(team, points), y=points)) +
geom_bar(stat='identity', fill = 'grey') +
geom_abline(intercept = mean(teams$points), slope = 0,
color = alpha('coral1', 0.7), size = 2)+
coord_flip()+
labs(y = 'Total Points', x = 'Team',
title = 'NBA Teams ranked by Total Points')+
theme_minimal()
select(arrange(teams, desc(points)), team)
library(scales)
ggplot(teams, aes(x = reorder(team, efficiency), y = efficiency)) +
geom_bar(stat='identity', fill = 'grey') +
geom_abline(intercept = mean(teams$efficiency), slope = 0,
color = alpha('coral1', 0.7), size = 2)+
coord_flip()+
labs(y = 'Total Efficiency', x = 'Team',
title = 'NBA Teams ranked by Total Efficiency')+
theme_minimal()
select(arrange(teams, desc(efficiency)), team)
# select the variables that we are interested in from teams
focus <- teams[, -c(1, 2, 3, 7, 15)]
# create pca object (containnig all the PC's)
pca <- prcomp(focus, scale. = TRUE)
# add PC1 PC2 back to teams
teams <- mutate(teams, pc1 = pca$x[ ,1], pc2 = pca$x[ ,2])
# rearrrange team by PC1 in descending order
select(arrange(teams, desc(pc1)), team)
eigs <- data.frame(
eigenvalue = round(pca$sdev^2, 4),
prop = round(pca$sdev^2 / sum(pca$sdev^2), 4),
cumprop = round(cumsum(pca$sdev^2 / sum(pca$sdev^2)), 4)
)
eigs
ggplot(data = teams, aes(pc1, pc2, label = team)) +
geom_point() +
geom_text(check_overlap = TRUE)
?sink
?write.csv
# ===================================================================
# Title: make teams table
# Description: More about dplyr and ggplot
# Input(s): nba2017-roster.csv
#           nba2017-stats.csv
# Output(s): efficiency-summary.txt
#            teams-summary.txt
#            nba2017-teams.csv
#            teams_star_plot.pdf
#            experience_salary.pdf
#            teams_star_plot.pdf
#            experience_salary.pdf
# Author: Tianqi Lu
# Date: 10-06-2017
# ===================================================================
# read csv tables
library(readr)
roster <- read_csv('data/nba2017-roster.csv')
stats <- read_csv('data/nba2017-stats.csv')
# add these variables to stats
library(dplyr)
stats <- mutate(stats,
missed_fg = field_goals_atts - field_goals_made,
missed_ft = points1_atts - points1_made,
points = 3 * points3_made + 2 * points2_made + points1_made,
rebounds = off_rebounds + def_rebounds,
efficiency = (points + rebounds + assists + steals + blocks
- missed_fg - missed_ft - turnovers)
/ games_played)
# output the efficiency index
sink(file = 'output/efficiency-summary.txt')
summary(stats$efficiency)
sink()
# merge two data frames
dat <- merge(roster, stats)
# create a new data frame from dat
teams <- summarise(
group_by(dat, team),
experience = sum(experience),
salary = round(sum(salary) / 1000000, digits = 2),
points3 = sum(points3_made),
points2 = sum(points2_made),
free_throws = sum(points1_made),
points = points3 + points2 + free_throws,
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists),
steals = sum(steals),
blocks = sum(blocks),
turnovers = sum(turnovers),
fouls = sum(fouls),
efficiency = sum(efficiency)
)
# export the summary of teams
sink('data/teams-summary.txt')
summary(teams)
sink()
# export teams as a csv file
write.csv(teams, row.names = FALSE, 'data/nba2017-teams.csv')
# export the star plot of teams
pdf(file = 'images/teams_star_plot.pdf')
stars(teams[ ,-1], labels = teams$team)
dev.off()
# export the scatterplot of experience and salary
library(ggplot2)
pdf(file = 'images/experience_salary.pdf')
ggplot(teams, aes(experience, salary, label = team)) +
geom_point() +
geom_text(check_overlap = TRUE)
dev.off()
library(scales)
library(ggplot2)
library(readr)
library(dplyr)
teams <- read_csv('data/nba2017-teams.csv')
ggplot(teams, aes(x = reorder(team, salary), y=salary)) +
geom_bar(stat='identity', fill = 'grey') +
geom_abline(intercept = mean(teams$salary), slope = 0,
color = alpha('coral1', 0.7), size = 2)+
coord_flip()+
labs(y = 'Salary (in millions)', x = 'Team',
title = 'NBA Teams ranked by Total Salary')+
theme_minimal()
select(arrange(teams, desc(salary)), team)
library(scales)
ggplot(teams, aes(x = reorder(team, points), y=points)) +
geom_bar(stat='identity', fill = 'grey') +
geom_abline(intercept = mean(teams$points), slope = 0,
color = alpha('coral1', 0.7), size = 2)+
coord_flip()+
labs(y = 'Total Points', x = 'Team',
title = 'NBA Teams ranked by Total Points')+
theme_minimal()
select(arrange(teams, desc(points)), team)
library(scales)
ggplot(teams, aes(x = reorder(team, efficiency), y = efficiency)) +
geom_bar(stat='identity', fill = 'grey') +
geom_abline(intercept = mean(teams$efficiency), slope = 0,
color = alpha('coral1', 0.7), size = 2)+
coord_flip()+
labs(y = 'Total Efficiency', x = 'Team',
title = 'NBA Teams ranked by Total Efficiency')+
theme_minimal()
select(arrange(teams, desc(efficiency)), team)
# select the variables that we are interested in from teams
focus <- teams[, -c(1, 2, 3, 7, 15)]
# create pca object (containnig all the PC's)
pca <- prcomp(focus, scale. = TRUE)
# add PC1 PC2 back to teams
teams <- mutate(teams, pc1 = pca$x[ ,1], pc2 = pca$x[ ,2])
# rearrrange team by PC1 in descending order
select(arrange(teams, desc(pc1)), team)
eigs <- data.frame(
eigenvalue = round(pca$sdev^2, 4),
prop = round(pca$sdev^2 / sum(pca$sdev^2), 4),
cumprop = round(cumsum(pca$sdev^2 / sum(pca$sdev^2)), 4)
)
eigs
library(scales)
library(ggplot2)
library(readr)
library(dplyr)
teams <- read_csv('data/nba2017-teams.csv')
ggplot(teams, aes(x = reorder(team, salary), y=salary)) +
geom_bar(stat='identity', fill = 'grey') +
geom_abline(intercept = mean(teams$salary), slope = 0,
color = alpha('coral1', 0.7), size = 2)+
coord_flip()+
labs(y = 'Salary (in millions)', x = 'Team',
title = 'NBA Teams ranked by Total Salary')+
theme_minimal()
select(arrange(teams, desc(salary)), team)
library(scales)
ggplot(teams, aes(x = reorder(team, points), y=points)) +
geom_bar(stat='identity', fill = 'grey') +
geom_abline(intercept = mean(teams$points), slope = 0,
color = alpha('coral1', 0.7), size = 2)+
coord_flip()+
labs(y = 'Total Points', x = 'Team',
title = 'NBA Teams ranked by Total Points')+
theme_minimal()
select(arrange(teams, desc(points)), team)
library(scales)
ggplot(teams, aes(x = reorder(team, efficiency), y = efficiency)) +
geom_bar(stat='identity', fill = 'grey') +
geom_abline(intercept = mean(teams$efficiency), slope = 0,
color = alpha('coral1', 0.7), size = 2)+
coord_flip()+
labs(y = 'Total Efficiency', x = 'Team',
title = 'NBA Teams ranked by Total Efficiency')+
theme_minimal()
select(arrange(teams, desc(efficiency)), team)
# select the variables that we are interested in from teams
focus <- teams[, -c(1, 2, 3, 7, 15)]
# create pca object (containnig all the PC's)
pca <- prcomp(focus, scale. = TRUE)
# add PC1 PC2 back to teams
teams <- mutate(teams, pc1 = pca$x[ ,1], pc2 = pca$x[ ,2])
# rearrrange team by PC1 in descending order
select(arrange(teams, desc(pc1)), team)
eigs <- data.frame(
eigenvalue = round(pca$sdev^2, 4),
prop = round(pca$sdev^2 / sum(pca$sdev^2), 4),
cumprop = round(cumsum(pca$sdev^2 / sum(pca$sdev^2)), 4)
)
eigs
ggplot(data = teams, aes(pc1, pc2, label = team)) +
geom_point() +
geom_text(check_overlap = TRUE)
# select the variables that we are interested in from teams
focus <- teams[, -c(1, 2, 3, 7, 15)]
# create pca object (containnig all the PC's)
pca <- prcomp(focus, scale. = TRUE)
# add PC1 PC2 back to teams
teams_with_pc <- mutate(teams, pc1 = pca$x[ ,1], pc2 = pca$x[ ,2])
# rearrrange team by PC1 in descending order
select(arrange(teams_with_pc, desc(pc1)), team)
eigs <- data.frame(
eigenvalue = round(pca$sdev^2, 4),
prop = round(pca$sdev^2 / sum(pca$sdev^2), 4),
cumprop = round(cumsum(pca$sdev^2 / sum(pca$sdev^2)), 4)
)
eigs
ggplot(data = teams_with_pc, aes(pc1, pc2, label = team)) +
geom_text(check_overlap = TRUE) +
ggtitle('PCA plot (PC1 and PC2)')
# rescale PC1
teams_with_pc = mutate(teams_with_pc,
rs_pc1 = 100 * (teams_with_pc$pc1 - min(teams_with_pc$pc1))
/ (max(teams_with_pc$pc1) - min(teams_with_pc$pc1)))
# create a barchart from the rescaled pc1
ggplot(teams_with_pc, aes(x = reorder(team, rs_pc1), y = rs_pc1)) +
geom_bar(stat='identity', fill = 'grey') +
coord_flip()+
labs(y = 'First PC (Scaled from 0 to 100', x = 'Team',
title = 'NBA Teams ranked by Scaled PC1') +
theme_minimal()
select(arrange(teams_with_pc, desc(rs_pc1)), team)
